// script

use coref::javascript::*


// //           vvvvvvvvvv
// function foo(this: Type) {
//     /* Empty */
// }
// class Parent {
//     /* Empty */
// }

// class Child extends Parent {
//     //  vvvvvvvvvvvv
//     foo(this: Parent) {
//         /* Empty */
//     }
// }

// 实现思路：1.找到class或function
// 2.在class或function中找到parameter
// 3.this关键字在parameter中处在前四位所以对比text

fn get_all_parameter(filePath: string, startLine: int, nodeOid: int) -> bool {
    let (db = JavascriptDB::load("coref_javascript_src.db")) {
        for (node in Node(db), file in File(db)) {
            if (isParameter(node)) {
                if (file = node.getLocation().getFile() &&
                    filePath = file.getRelativePath() &&
                    startLine = node.getLocation().getStartLineNumber() &&
                    nodeOid = node.id
                ) {
                    return true
                }
            }
        }
    }
}
// index第几个parameter使用了this,typeKind是区分function还是method
fn get_parameter_this(targetOid: int,typeKind: string, index: int) -> bool {
    let (db = JavascriptDB::load("coref_javascript_src.db")) {
        for (node in Node(db), file in File(db)) {
            //                 vvvvvvvvvv
            //    function foo(this: Type) {
            //        /* Empty */
            //    }
            if (isFunctionDeclaration(node)) {
                let (node0 = node.to<FunctionDeclaration>()) {
                    for (parameter0 in node0.getAParameter()) {
                        if (parameter0.getChild(0).getText() = "this") {
                            if (targetOid = parameter0.id &&
                                index = parameter0.getLocation().getStartColumnNumber() &&
                                typeKind = "Function"
                            ) {
                                return true
                            }
                        }
                    }
                }
            }
            if (isMethodDeclaration(node)) {
                // class Parent {
                //     /* Empty */
                //    }
                // class Child extends Parent {
                //          vvvvvvvvvvvv
                //      foo(this: Parent) {
                //            /* Empty */
                //      }
                //  }
                let (node1 = node.to<MethodDeclaration>()) {
                    for (parameter1 in node1.getAParameter()) {
                        if (parameter1.getChild(0).getText() = "this") {
                            if (targetOid = parameter1.id &&
                                index = parameter1.getLocation().getStartColumnNumber()  &&
                                typeKind = "Class Method"
                            ) {
                                return true
                            }
                        }
                    }
                }
            }
        }
    }
}

fn main() {
    output(get_all_parameter())
    output(get_parameter_this())
} 