// script
use coref::javascript::*

fn out(
    filePath: string,
    functionOid: int,
    functionName: string,
    functionStartLine: int,
    functionStartColumn: int
) -> bool {
    let (db = JavascriptDB::load("coref_javascript_src.db")) {
        for (func in FunctionLikeDeclaration(db), file in File(db)) {
            if (file = func.getLocation().getFile() &&
                filePath = file.getRelativePath() &&
                functionOid = func.id &&
                functionName = func.getName() &&
                functionStartLine = func.getLocation().getStartLineNumber() &&
                functionStartColumn = func.getLocation().getStartColumnNumber()) {
                    for (param in func.getAParameter()) {
                        let (name = param.getNameNode()) {
                            if (isObjectBindingPattern(name.to<Node>()) ||
                                isArrayBindingPattern(name.to<Node>()) ||
                                param.isRestParameter()
                            ) {
                                return true
                            }
                        }
                    }
            }
        }
    }
}

fn main() {
    output(out())
}